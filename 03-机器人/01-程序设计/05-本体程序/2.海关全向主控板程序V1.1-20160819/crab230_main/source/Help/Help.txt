*******************************************************************************************************
程序介绍


・1 			功能介绍
・2 			结构说明
・3 			注意事项
・4 			版本说明
・5 			后继计划
*******************************************************************************************************


------------------------------------------------------------------------------------------------------------------------------------------------------
1 功能介绍

  该程序实现了对机器人内部各个电机驱动器和一些其它外部设备的控制，以及与控制终端的交互
------------------------------------------------------------------------------------------------------------------------------------------------------


------------------------------------------------------------------------------------------------------------------------------------------------------
2 程序结构分为：

	1) STM32F4_CMSIS&STM32F4_StdPeriph 
		系统底层库函数 由官方提供
	
	2) STM32_Driver     
		系统驱动层，提供串口当个字节的收发函数接口以及一些延时函数，提供了单片机端口初始化接口
	
	3) DataTypeRealize
		设备数据层，提供了串口类、链表类、LED等控制类、定时器控制类等数据类型
	
	4) Protocol          
		协议层，实现了关于机器人系统通信的一系列协议类，此层只负责数据的收发
	
	5) App
		应用层，实现了机器人的数据处理以及设备初始化等，该层只有一个类，只提供了三个接口，对应运行在三个定时器溢出中断函数中
	
	6) User
		用户层，实现了整个系统的初始化，以及程序的入口，对应用层的功能调用等
------------------------------------------------------------------------------------------------------------------------------------------------------


------------------------------------------------------------------------------------------------------------------------------------------------------
3 注意事项

	1) c++的配置，首先去掉Use MicrolLIB，在main函数的开头添加_init_alloc函数初始化堆，在所有的C程序的头文件中添加支持C++编译
	   的控制宏（#ifdef __cplusplus），系统的头文件已经添加C++支持
	
	2) 堆和栈的size配置，通过修改.s汇编文件（程序的启动文件）改变堆和栈的初始化大小，本程序将堆的大小从0x200改成0x800
	
	3) 中断函数名的配置 该版本采用系统默认配置 如果需要考虑类的封装性，将类成员函数做中断函数，可以考虑修改.s汇编文件（程序的启动文件）
		由于该方法比较复杂，而且容易出错，本程序没有采用
	
	4) 该编译器不支持C99标准，例如结构体的初始化不支持像eclipse（老版Xmega128XBOT主控程序是支持的）的写法
	
	5) 如果非必要，尽量少采用大的结构以及深层次的迭代算法，原因是单片机的资源有限
	
	6) 严格按照C++的标准进行内存的申请和释放，包括类的析构，如果使用了new关键字进行了对象的内存申请，必须要对应delete释放，尤
	   其是在普通函数（非构造函数）中带new的临时指针变量，为避免失误，最好不要使用带new的指针类型，可以使用数组和普通的变量代替
	   
	7) MDK4.54和MDK4.70A未破解版都有J-LINK仿真32K的限制问题，该程序超过了32K，所以仿真有问题，网上有一些破解的老版本可能会支持
	   可以通过优化程序，精简一些没用到的底层系统库缩小代码量，目前没做这部分工作
------------------------------------------------------------------------------------------------------------------------------------------------------


------------------------------------------------------------------------------------------------------------------------------------------------------
4 版本说明

	v1.0
		初步规划了程序的结构，实现了初步功能
		
	v1.1
		升级说明：修改了一部分函数，协议层做了较大的修正 单片机端口的初始化做了校正。
				  优化了程序的移植
				  使用c++和c混合编程，将大部分功能使用c++实现
				  
	命名规则：
	类  名：大写开头，后面的单词首字母都为大写，特殊的名称缩写使用大写，如LED
	变  量：小写开头，后面的单词首字母都为大写，特殊的名称缩写使用大写，如LED
	函数名：小写开头，后面的单词首字母都为大写，特殊的名称缩写使用大写，如LED
	宏定义：全大写，单词之间用下划线隔开，头文件控制宏一律采用下划线开头，以便和其他宏区别
	枚  举：类型名，小写开头，后面的单词首字母都为大写，成员名全大写
------------------------------------------------------------------------------------------------------------------------------------------------------	
	

------------------------------------------------------------------------------------------------------------------------------------------------------
5 后继版本更新计划

	v1.2（2013年完成）
	更新一些BUG，改善一些不完善的地方
	底层的驱动特别是串口的驱动用C++重写
	
	v1.3（2013-2014年完成）
	加入看门狗
	加入GPS和姿态仪
	
	V2.0（2014）
	在前面的基础上，将协议重新设计，力求更加合理，加入一些智能，如巡航 蔽障功能等
	
	v3.0（2015年或更长远的将来）
	加入多设备的支持，更换单片机，最好是多核心CPU，加入操作系统（LINUX或者自己写一个支持多线程的操作系统），
	采用CAN通信，支持超远程控制，多机器人协同工作
------------------------------------------------------------------------------------------------------------------------------------------------------	
	
	
	
	
	
	
	
	
	